{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Register\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_hoisted_1, $data.loading ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"loading...\")) : _createCommentVNode(\"v-if\", true), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Nama\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.name]]), _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.email]]), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.password]]), _createTextVNode(), _hoisted_6, _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.register && $options.register(...args))\n  }, \"Register\")]), _createElementVNode(\"p\", null, [_createTextVNode(\"Sudah punya akun? \"), _createVNode(_component_router_link, {\n    to: {\n      name: 'login'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Login \")]),\n    _: 1 /* STABLE */\n  })])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAEMA,oBAAiB,YAAb,UAAQ;;;;;;EAEIC,KAAiB,EAAjB;IAAA;EAAA;;gCAC0CD,oBAAK;gCACFA,oBAAK;gCACKA,oBAAK;;;;6DAN9EA,oBAQM,cAPJE,UAAiB,EACRC,aAAO,kBAAhBC,oBAAgC,iBAAd,YAAU,wCACnBD,WAAK,kBAAdC,oBAAiD,KAAjDC,UAAiD,mBAAZF,WAAK,uEAC1CH,oBAA0D;IAAnDM,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,MAAM;+DAAUJ,UAAI,CAACK,IAAI;iDAATL,UAAI,CAACK,IAAI,KAAEC,UAAK,kBAC/DT,oBAA6D;IAAtDM,IAAI,EAAC,OAAO;IAACC,WAAW,EAAC,OAAO;+DAAUJ,UAAI,CAACO,KAAK;iDAAVP,UAAI,CAACO,KAAK,KAAEC,UAAK,kBAClEX,oBAAsE;IAA/DM,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC,UAAU;+DAAUJ,UAAI,CAACS,QAAQ;iDAAbT,UAAI,CAACS,QAAQ,yBAAGC,UAAK,EAC5Eb,oBAA2C;IAAlCc,OAAK,yCAAEC,+CAAQ;KAAE,UAAQ,KAEpCf,oBAAoF,6BAAjF,oBAAkB,gBAA2DgB;IAA7CC,EAAE,EAAE;MAAAT;IAAA;EAAiB;sBAAE,MAAQ,kBAAR,SAAQ","names":["_createElementVNode","style","_hoisted_1","$data","_createElementBlock","_hoisted_3","type","placeholder","name","_hoisted_4","email","_hoisted_5","password","_hoisted_6","onClick","$options","_component_router_link","to"],"sourceRoot":"","sources":["D:\\Laravel\\FE Fauzi\\frontend-uas-2022\\frontend\\src\\views\\auth\\RegisterView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Register</h1>\r\n      <p v-if=\"loading\">loading...</p>\r\n      <p v-if=\"error\" style=\"color:red\">{{ error }}</p>\r\n      <input type=\"text\" placeholder=\"Nama\" v-model=\"user.name\"><br/>\r\n      <input type=\"email\" placeholder=\"Email\" v-model=\"user.email\"><br/>\r\n      <input type=\"password\" placeholder=\"Password\" v-model=\"user.password\"> <br/>\r\n      <button @click=\"register\">Register</button>\r\n    </div>\r\n    <p>Sudah punya akun? <router-link :to=\"{ name: 'login' }\"> Login  </router-link></p>\r\n  </template>\r\n  \r\n  <script>\r\n  import repository from \"@/api/repository\";\r\n  export default {\r\n    name: 'RegisterView',\r\n  \r\n    data() {\r\n      return {\r\n        user: {\r\n          email: null,\r\n          password: null,\r\n          name: null\r\n        },\r\n        loading: false,\r\n        error: null\r\n      }\r\n    },\r\n  \r\n    methods: {\r\n      async register() {\r\n        this.error = null;\r\n  \r\n        try {\r\n          await repository.register(this.user).then(async () => {\r\n            await this.$store.dispatch('login', this.user);\r\n          });\r\n          await this.$router.push({ name: 'UserPost' });\r\n        } catch (error) {\r\n          this.error = error;\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  /* style the input and login button */\r\n  input {\r\n    width: 200px;\r\n    height: 30px;\r\n    margin: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n  }\r\n  input:focus {\r\n    border: 1px solid #555;\r\n  }\r\n  button {\r\n  background-color: #4CAF50;\r\n  border: none;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n}\r\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}