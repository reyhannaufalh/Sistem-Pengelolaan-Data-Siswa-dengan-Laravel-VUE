{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport repository from \"@/api/repository\";\nimport Paginate from \"vuejs-paginate-next\";\nexport default {\n  name: \"UserView\",\n  components: {\n    paginate: Paginate\n  },\n  setup() {},\n  data() {\n    return {\n      posts: null,\n      error: null,\n      i: 0,\n      page: 0,\n      pageRange: 10,\n      pageCount: 0\n    };\n  },\n  methods: {\n    clickCallback(pageNum) {\n      this.page = pageNum;\n    }\n  },\n  async mounted() {\n    try {\n      let {\n        data\n      } = await repository.getPosts();\n      const originalArr = data;\n      const splittedArray = [\"\"];\n      while (originalArr.length > 0) {\n        splittedArray.push(originalArr.splice(0, this.pageRange));\n      }\n      this.pageCount = splittedArray.length - 1;\n      this.page = 1;\n      this.posts = splittedArray;\n    } catch (error) {\n      this.error = error;\n    }\n  }\n};","map":{"version":3,"mappings":";AAgCA,OAAOA,UAAS,MAAO,kBAAkB;AACzC,OAAOC,QAAO,MAAO,qBAAqB;AAE1C,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVC,QAAQ,EAAEH;EACZ,CAAC;EACDI,KAAK,GAAG,CAAC,CAAC;EACVC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,IAAI;MACXC,CAAC,EAAE,CAAC;MACJC,IAAI,EAAE,CAAC;MACPC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAa,CAACC,OAAO,EAAE;MACrB,IAAI,CAACL,IAAG,GAAIK,OAAO;IACrB;EACF,CAAC;EACD,MAAMC,OAAO,GAAG;IACd,IAAI;MACF,IAAI;QAAEV;MAAK,IAAI,MAAMN,UAAU,CAACiB,QAAQ,EAAE;MAC1C,MAAMC,WAAU,GAAIZ,IAAI;MACxB,MAAMa,aAAY,GAAI,CAAC,EAAE,CAAC;MAC1B,OAAOD,WAAW,CAACE,MAAK,GAAI,CAAC,EAAE;QAC7BD,aAAa,CAACE,IAAI,CAACH,WAAW,CAACI,MAAM,CAAC,CAAC,EAAE,IAAI,CAACX,SAAS,CAAC,CAAC;MAC3D;MACA,IAAI,CAACC,SAAQ,GAAIO,aAAa,CAACC,MAAK,GAAI,CAAC;MACzC,IAAI,CAACV,IAAG,GAAI,CAAC;MACb,IAAI,CAACH,KAAI,GAAIY,aAAa;IAC5B,EAAE,OAAOX,KAAK,EAAE;MACd,IAAI,CAACA,KAAI,GAAIA,KAAK;IACpB;EACF;AACF,CAAC","names":["repository","Paginate","name","components","paginate","setup","data","posts","error","i","page","pageRange","pageCount","methods","clickCallback","pageNum","mounted","getPosts","originalArr","splittedArray","length","push","splice"],"sourceRoot":"","sources":["D:\\Laravel\\FE Fauzi\\frontend-uas-2022\\frontend\\src\\views\\posts\\UserView.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-page\">\r\n    <div class=\"navbar\">\r\n      <button id=\"btn-logout\" @click=\"register\">Logout</button>\r\n    </div>\r\n    <div class=\"main\">\r\n      <p v-if=\"error\" style=\"color: red\">{{ error }}</p>\r\n      <div v-if=\"posts\" class=\"posts-wrapper\">\r\n        <div class=\"table-users\">\r\n          <table cellspacing=\"0\">\r\n            <tr>\r\n              <th>Nama</th>\r\n              <th>Email</th>\r\n              <th>Role</th>\r\n            </tr>\r\n\r\n            <tr v-for=\"(post, index) in posts[page]\" :key=\"index\">\r\n              <td>{{ post.name }}</td>\r\n              <td>{{ post.email }}</td>\r\n              <td>{{ post.role }}</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n        <paginate v-model=\"page\" :page-count=\"this.pageCount\" :page-range=\"this.pageRange\" :margin-pages=\"2\" :click-handler=\"clickCallback\" :prev-text=\"'Prev'\" :next-text=\"'Next'\" :container-class=\"'pagination'\" :page-class=\"'page-item'\">\r\n        </paginate>\r\n      </div>\r\n      <p v-else>loading...</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport repository from \"@/api/repository\";\r\nimport Paginate from \"vuejs-paginate-next\";\r\n\r\nexport default {\r\n  name: \"UserView\",\r\n  components: {\r\n    paginate: Paginate,\r\n  },\r\n  setup() {},\r\n  data() {\r\n    return {\r\n      posts: null,\r\n      error: null,\r\n      i: 0,\r\n      page: 0,\r\n      pageRange: 10,\r\n      pageCount: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    clickCallback(pageNum) {\r\n      this.page = pageNum;\r\n    },\r\n  },\r\n  async mounted() {\r\n    try {\r\n      let { data } = await repository.getPosts();\r\n      const originalArr = data;\r\n      const splittedArray = [\"\"];\r\n      while (originalArr.length > 0) {\r\n        splittedArray.push(originalArr.splice(0, this.pageRange));\r\n      }\r\n      this.pageCount = splittedArray.length - 1;\r\n      this.page = 1;\r\n      this.posts = splittedArray;\r\n    } catch (error) {\r\n      this.error = error;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#btn-logout {\r\n  background-color: red;\r\n  width: 100px;\r\n  font-size: 20px;\r\n  font-weight: 600px;\r\n}\r\n.table-users {\r\n  border: 1px solid #327a81;\r\n  border-radius: 10px;\r\n  box-shadow: 3px 3px 0 rgba(0, 0, 0, 0.1);\r\n  max-width: calc(100% - 2em);\r\n  margin: 1em auto;\r\n  overflow: hidden;\r\n  width: 800px;\r\n}\r\ntable {\r\n  width: 100%;\r\n}\r\ntable td,\r\ntable th {\r\n  color: #2b686e;\r\n  padding: 10px;\r\n}\r\ntable td {\r\n  text-align: left;\r\n  vertical-align: middle;\r\n}\r\ntable th {\r\n  background-color: #1c1c1c;\r\n  font-weight: 300;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}