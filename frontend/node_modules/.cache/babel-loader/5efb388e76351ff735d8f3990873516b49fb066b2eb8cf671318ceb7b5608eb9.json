{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"edit-page\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Edit User\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  id: \"btn-main\"\n}, \"Update\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $setup.update && $setup.update(...args), [\"prevent\"]))\n  }, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    id: \"input-edit\",\n    type: \"text\",\n    placeholder: \"Nama\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.user.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.user.name]]), _withDirectives(_createElementVNode(\"input\", {\n    id: \"input-edit\",\n    type: \"text\",\n    placeholder: \"Email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.user.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.user.email]]), _hoisted_3], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAW;gCAElBC,oBAAkB,YAAd,WAAS;gCAGbA,oBAAmD;EAA3CC,IAAI,EAAC,QAAQ;EAACC,EAAE,EAAC;GAAW,QAAM;;;uBAL9CC,oBAOM,OAPNC,UAOM,GANJJ,oBAKO;IALAK,QAAM,wDAAUC,uCAAM;MAC3BC,UAAkB,kBAClBP,oBAA4E;IAArEE,EAAE,EAAC,YAAY;IAACD,IAAI,EAAC,MAAM;IAACO,WAAW,EAAC,MAAM;+DAAUC,SAAI,CAACC,IAAI;iDAATD,SAAI,CAACC,IAAI,qBACxEV,oBAA8E;IAAvEE,EAAE,EAAC,YAAY;IAACD,IAAI,EAAC,MAAM;IAACO,WAAW,EAAC,OAAO;+DAAUC,SAAI,CAACE,KAAK;iDAAVF,SAAI,CAACE,KAAK,KAC1EC,UAAmD","names":["class","_createElementVNode","type","id","_createElementBlock","_hoisted_1","onSubmit","$setup","_hoisted_2","placeholder","_ctx","name","email","_hoisted_3"],"sourceRoot":"","sources":["D:\\Laravel\\FE Fauzi\\frontend-uas-2022\\frontend\\src\\views\\posts\\EditView.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-page\">\r\n    <form @submit.prevent=\"update\">\r\n      <h1>Edit User</h1>\r\n      <input id=\"input-edit\" type=\"text\" placeholder=\"Nama\" v-model=\"user.name\" />\r\n      <input id=\"input-edit\" type=\"text\" placeholder=\"Email\" v-model=\"user.email\" />\r\n      <button type=\"submit\" id=\"btn-main\">Update</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, ref, onMounted } from \"vue\";\r\nimport { useRouter, useRoute } from \"vue-router\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  setup() {\r\n    //initial state\r\n    const user = reactive({\r\n      name: \"\",\r\n      email: \"\",\r\n    });\r\n\r\n    //state validation\r\n    const validation = ref([]);\r\n\r\n    //vue router\r\n    const router = useRouter();\r\n\r\n    //vue router\r\n    const route = useRoute();\r\n\r\n    //mounted\r\n    onMounted(() => {\r\n      //get API from Laravel Backend\r\n      axios\r\n        .get(`http://localhost:8000/api/userlist/${route.params.id}`)\r\n        .then((response) => {\r\n          //assign state users with response data\r\n          user.name = response.data.data.name;\r\n          user.email = response.data.data.email;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response.data);\r\n        });\r\n    });\r\n\r\n    //method update\r\n    function update() {\r\n      let nama = user.nama;\r\n      let email = user.email;\r\n\r\n      axios\r\n        .put(`http://localhost:8000/api/userlist/${route.params.id}`, {\r\n          name: name,\r\n          email: email,\r\n        })\r\n        .then(() => {\r\n          //redirect to siswa index\r\n          router.push({\r\n            name: \"siswa.index\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          //assign state validation with error\r\n          validation.value = error.response.data;\r\n        });\r\n    }\r\n\r\n    //return\r\n    return {\r\n      post,\r\n      validation,\r\n      router,\r\n      update,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* style the input and login button */\r\n.edit-page {\r\n  width: 360px;\r\n  padding: 40px 36px;\r\n  color: white;\r\n  background-color: #1c1c1c;\r\n  border-radius: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.edit-page h1 {\r\n  margin-bottom: 36px;\r\n}\r\n\r\n#input-edit {\r\n  width: 100%;\r\n  padding: 8px 8px;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n  margin: 12px 0;\r\n}\r\n\r\n#input:focus {\r\n  border: 1px solid white;\r\n}\r\n#btn-main {\r\n  background-color: #005a8d;\r\n  width: 100%;\r\n  border: none;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  margin: 40px 0;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n}\r\n\r\n#link {\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n  color: #005a8d;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}